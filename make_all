#!/usr/bin/python

import os
import argparse

this_dir = os.path.dirname(os.path.realpath(__file__))

def make_anchour(s):
    return "#" + s.lower().replace("_" , "-").replace(" " , "-").replace("(" , "").replace(")" , "").replace("/" , "-").replace("\\" , "-").replace("," , "")

def process_dir(all_md , toc_md , level , directory , pre = None , up = None , nxt = None , toc = "TOC"):
    """
    all_md : [str]
        String containing the main markdown file for the site.
    toc_md : [str]
        String containing the table of contents
    level : int
        Level in the tree, starting with 0
    """
    dirname = os.path.split(directory)[-1][4:]
    title = dirname.replace("_" , " ")
    anchour = make_anchour(dirname) 

    if(up != None):
        toc_md.append(("\t" * (level - 1)) + "* [" + title  + "](" + anchour  + ")\n")

        all_md.append("\n\n" + ("#" * level) + " " + title + "\n\n")
        if(os.path.isfile(os.path.join(directory , "content.md"))):
            with open(os.path.join(directory , "content.md") , "r") as c:
                all_md.append(c.read().replace("---ThisDir---" , directory))
        all_md.append("\n\n")
        if(pre != None):
            nme = pre[1:].replace("-" , " ")
            all_md.append("[←](" + pre + " \"" + nme + "\"" + ")")
        if(up != None):
            nme = up[1:].replace("-" , " ")
            all_md.append("[↑](" + up + " \"" + nme + "\"" + ")")
        if(nxt != None):
            nme = nxt[1:].replace("-" , " ")
            all_md.append("[→](" + nxt + " \"" + nme + "\"" + ")")
        all_md.append("\n\n")
    else:
        toc_md.append("\n\n" + "# " + toc + "\n\n")
        anchour = make_anchour(toc) 

    subDirs = []
    for f in os.listdir(directory):
        if(os.path.isdir(os.path.join(directory , f))):
            subDirs.append(f)
    subDirs.sort(key = lambda s : int(s[0:3]))
   
    for ii in range(len(subDirs)):
        pre_anchour = None
        nxt_anchour = None
        if(ii != 0):
            pre_anchour = make_anchour(subDirs[ii - 1][4:])
        if(ii != len(subDirs) - 1):
            nxt_anchour = make_anchour(subDirs[ii + 1][4:])
        process_dir(all_md , toc_md , level + 1 , os.path.join(directory , subDirs[ii]) , pre = pre_anchour , up = anchour , nxt = nxt_anchour)


if(__name__ == "__main__"):
    parser = argparse.ArgumentParser(description = """
    Make static website.
    """)
    parser.add_argument("-d" , "--directory" , help = "Directory with website.")
    parser.add_argument("-t" , "--toc" , help = "Name for table of contents.")
    parser.add_argument("start" , help = "First node directory.")
    args = parser.parse_args()

    if(args.directory != None):
        os.chdir(args.directory)
    
    if(args.toc == None):
        args.toc = "TOC"

    meta = ""
    if(os.path.exists("meta.md")):
        with open("meta.md" , "r") as f:
            meta = f.read()
            meta = meta + "\n"

    init = ""
    if(os.path.exists("init.md")):
        with open("init.md" , "r") as f:
            init = f.read()
            init = init + "\n"

    all_markdown = []
    toc_markdown = []
    process_dir(all_markdown , toc_markdown , 0 , args.start , toc = args.toc)

    index_md = meta + init + "".join(toc_markdown) + "\n" + "".join(all_markdown) + "\n"

    print(index_md)
